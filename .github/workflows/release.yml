on:
  push:
    tags:
      - 'v*'

name: Create Release
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@master

    - uses: actions/setup-node@v1
      with:
        node-version: 13

    - name: Install
      run: yarn install

    - name: Eslint Test
      run: yarn run lint

    - name: Build source code
      run: yarn run build

    - name: Create release upx file
      run: npm i -g asar && bash release.sh && mv iterm.upx iterm-${{ github.ref }}.upx

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./iterm-${{ github.ref }}.upx
        asset_name: iterm-${{ github.ref }}.upx
        asset_content_type: application/octet-stream
